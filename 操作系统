1、进程与线程的区别，为什么进程切换代价比线程高
2、进程间调度算法
3、内核态与用户态的区别？从用户态切换到内核态有哪几种方式
4、操作系统页面管理是怎样的？页面大小一般多少？过大或过小会怎样
5、进程请求资源死锁，如果在编程上防止死锁？
6、内存对齐，为什么要内存对齐
7、1G内存可以装入2G程序么？怎么装
8、常见的页面置换算法
9、进程通信的方式有哪几种？哪种的效率会更好？为什么？各种方式的区别以及应用场景？
10、堆与栈的区别
11、普通类的析构函数对异常有什么要求
12、内核分几个部分
13、OS同步与互斥的区别
14、自旋锁和互斥锁的区别
15、进程IPC方式
16、socket和共享内存用于什么情况
17、如何理解线程安全
18、fork一个新进程与建立一个线程的区别
19、线程间通信机制
20、线程同步的方式，各种方式的区别
21、守护进程的创建
22、操作系统加载流程
23、进程的常见状态？以及各种状态之间的转换条件
24、静态链接与动态链接的优缺点？
25、死锁？死锁产生的条件？预防、避免死锁的方法？
26、经典同步问题解法：生产者与消费者问题，哲学家进餐问题，读者写者问题。
27、虚拟内存？使用虚拟内存的优点？
28、页面置换算法？LRU Cache算法？
29、信号量是什么，应用场景
30、什么是死锁，如何预防
31、操作系统核心主要分为哪几个部分
32、操作系统的内核主要承担怎样的工作呢
33、操作系统内核中，常常以模块的形式进行加载和卸载（比如驱动），这样做有什么好处
34、操作系统如何确定安全的卸载了模块
35、虚拟内存机制，虚存与物理内存的映射
36、静态库与动态库，静态链接与动态链接
37、僵尸进程与孤儿进程
